/* tslint:disable */
/* eslint-disable */
/**
 * Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiApiPublicConsentAcceptRequest,
  ApiApiPublicConsentRejectRequest,
} from '../models/index';
import {
    ApiApiPublicConsentAcceptRequestFromJSON,
    ApiApiPublicConsentAcceptRequestToJSON,
    ApiApiPublicConsentRejectRequestFromJSON,
    ApiApiPublicConsentRejectRequestToJSON,
} from '../models/index';

export interface ApiPublicConsentAcceptPostRequest {
    apiApiPublicConsentAcceptRequest?: ApiApiPublicConsentAcceptRequest;
}

export interface ApiPublicConsentGetRequest {
    consentRequestId?: string;
}

export interface ApiPublicConsentRejectPostRequest {
    apiApiPublicConsentRejectRequest?: ApiApiPublicConsentRejectRequest;
}

/**
 * 
 */
export class ConsentApi extends runtime.BaseAPI {

    /**
     */
    async apiPublicConsentAcceptPostRaw(requestParameters: ApiPublicConsentAcceptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/consent/accept`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiApiPublicConsentAcceptRequestToJSON(requestParameters.apiApiPublicConsentAcceptRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicConsentAcceptPost(requestParameters: ApiPublicConsentAcceptPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicConsentAcceptPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiPublicConsentGetRaw(requestParameters: ApiPublicConsentGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.consentRequestId !== undefined) {
            queryParameters['consentRequestId'] = requestParameters.consentRequestId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/consent`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicConsentGet(requestParameters: ApiPublicConsentGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicConsentGetRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiPublicConsentRejectPostRaw(requestParameters: ApiPublicConsentRejectPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/consent/reject`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiApiPublicConsentRejectRequestToJSON(requestParameters.apiApiPublicConsentRejectRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicConsentRejectPost(requestParameters: ApiPublicConsentRejectPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicConsentRejectPostRaw(requestParameters, initOverrides);
    }

}
